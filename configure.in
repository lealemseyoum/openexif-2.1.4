dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/ExifImageFile.h)
AC_CONFIG_AUX_DIR(./config-scripts)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(openexif, 2.1.4)
AM_CONFIG_HEADER(src/ExifComp.h)

dnl ==========================================================================
dnl Check if they want to compile in debug mode
dnl ==========================================================================

AC_ARG_WITH(enable_debug, [  -enable-debug= [ yes | no ] Compile in debug mode [default=no]])
AC_MSG_CHECKING(to compile in debug mode )
build_debug='no'
CXXFLAGS="-O2"
CFLAGS="-O2"
if [ test "x$enable_debug" = "xyes" ] ; then
  build_debug='yes'
  AC_DEFINE(_DEBUG)
  CXXFLAGS="-g"
  CFLAGS="-g"
fi
AC_MSG_RESULT([$build_debug])
AM_CONDITIONAL(PMT_DEBUG, test x$enable_debug = xyes)

dnl Determine if we're a manintainer or not
dnl (adds a --enable-maintainer-mode option)
AM_MAINTAINER_MODE

AC_DEFUN([AC_COMPILE_ANSI],
[AC_MSG_CHECKING(ansi compiler mode)
if test -n "$CXX"
then
  if test "$GXX" = "yes"
  then
    ac_compile_ansi_opt='-ansi'
  fi
  CXXFLAGS="$CXXFLAGS $ac_compile_ansi_opt"
  ac_compile_ansi_msg="$ac_compile_ansi_opt for C++"
fi

if test -n "$CC"
then
  if test "$GCC" = "yes"
  then
    ac_compile_ansi_opt='-ansi'
  fi
  CFLAGS="$CFLAGS $ac_compile_ansi_opt"
  ac_compile_ansi_msg="$ac_compile_ansi_msg $ac_compile_ansi_opt for C"
fi
AC_MSG_RESULT($ac_compile_ansi_msg)
unset ac_compile_ansi_msg
unset ac_compile_ansi_opt
])
dnl @synopsis AC_COMPILE_WARNINGS
dnl
dnl Set the maximum warning verbosity according to compiler used.
dnl Currently supports g++ and gcc.
dnl This macro must be put after AC_PROG_CC and AC_PROG_CXX in
dnl configure.in
dnl
dnl @version $Id: configure.in,v 1.28 2010/01/26 14:43:05 smfryer Exp $
dnl @author Loic Dachary <loic@senga.org>
dnl
AC_DEFUN([AC_COMPILE_WARNINGS],
[AC_MSG_CHECKING(maximum warning verbosity option)
if test -n "$CXX"
then
  if test "$GXX" = "yes"
  then
    ac_compile_warnings_opt='-Wall'
  fi
  CXXFLAGS="$CXXFLAGS $ac_compile_warnings_opt"
  ac_compile_warnings_msg="$ac_compile_warnings_opt for C++"
fi

if test -n "$CC"
then
  if test "$GCC" = "yes"
  then
    ac_compile_warnings_opt='-Wall'
  fi
  CFLAGS="$CFLAGS $ac_compile_warnings_opt"
  ac_compile_warnings_msg="$ac_compile_warnings_msg $ac_compile_warnings_opt for C"
fi
AC_MSG_RESULT($ac_compile_warnings_msg)
unset ac_compile_warnings_msg
unset ac_compile_warnings_opt
])
AC_DEFUN(AC_SYS_POSIX,
[AC_REQUIRE([AC_CANONICAL_SYSTEM])dnl

AC_MSG_CHECKING(for POSIX System)

case "${host}" in
        *-*-solaris*)
		if grep _POSIX_VERSION [/usr/include/sys/unistd.h] >/dev/null 2>&1
		then
		  AC_MSG_RESULT(yes)
		  sys_posix=yes # If later tests want to check for Posix.
		  AC_DEFINE(_POSIX_C_SOURCE)
		else
		  AC_MSG_RESULT(no)
		  sys_posix=
		fi ;;

        *-*-linux*)
		if grep _POSIX_VERSION [/usr/include/unistd.h] >/dev/null 2>&1
		then
		  AC_MSG_RESULT(yes)
		  sys_posix=yes # If later tests want to check for ISC.
		  AC_DEFINE(_POSIX_SOURCE)
		else
		  AC_MSG_RESULT(no)
		  sys_posix=
		fi ;;
	*)
		AC_MSG_RESULT(no)
		sys_posix=no ;;
esac
])

dnl Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_COMPILE_ANSI
AC_SYS_POSIX
AC_COMPILE_WARNINGS
AC_PROG_LIBTOOL
AC_PROG_MAKE_SET

dnl @synopsis AC_COMPILE_ANSI
dnl
dnl Set compiler to ANSI mode.
dnl This macro must be put after AC_PROG_CC and AC_PROG_CXX in
dnl configure.in
dnl
dnl


dnl Check compiler capabilities
dnl AM_PROG_CC_C_O

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([fcntl.h stdlib.h string.h unistd.h])

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_SIZE_T

dnl Check for endianness - defines WORD_BIGENDIAN
AC_C_BIGENDIAN


AC_MSG_CHECKING([the bit order of the target CPU ($target)])  
ac_fillorder=LSB2MSB
case "$target" in
    mips-dec-*) AC_DEFINE(HAVE_FILLORDER_LSB2MSB) ;;
    i[3456]86-*) AC_DEFINE(HAVE_FILLORDER_LSB2MSB) ;;
    *)		ac_fillorder=MSB2LSB ;;
esac
AC_MSG_RESULT($ac_fillorder)

dnl Checks for library functions.
AC_FUNC_MALLOC
AC_CHECK_FUNCS([memset])

dnl Check for special needs

dnl ==========================================================================
dnl Check if they want to create DCF spec-compliant files (default yes!)
dnl ==========================================================================

AC_ARG_WITH(enable_dcf, [  -enable-dcf= [ yes | no ] Compile in dcf compliance features [default=yes]])
AC_MSG_CHECKING(to create DCF compliant files )
build_dcf='yes'
if [ test "x$enable_dcf" = "xno" ] ; then
  build_dcf='no'
else
  AC_DEFINE(OPENEXIF_DCF_COMPLIANT)
fi
AC_MSG_RESULT([$build_dcf])
AM_CONDITIONAL(EXIF_DCF, test x$enable_dcf = xyes)



AC_OUTPUT(Makefile src/Makefile test/Makefile examples/Makefile examples/AppSegDump/Makefile examples/ExifTagDump/Makefile examples/CreateExif/Makefile)

